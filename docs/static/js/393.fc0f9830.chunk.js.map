{"version":3,"file":"static/js/393.fc0f9830.chunk.js","mappings":"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","sources":["Components/CharacterData/characterData.tsx","Components/SelectGenderButton/SGButton.tsx","Components/System/CheckAnswer.tsx","Components/System/ClickCounter.tsx","Components/System/Popup.tsx","Components/GameComponent.tsx","Components/CharacterData/img|sync|nonrecursive|//.(png%7Cjpe?g%7Csvg)$"],"sourcesContent":["import { CharacterData } from 'src/Components/CharacterData/characterDataInterface';\n\ndeclare const require: {\n    context: (path: string, deep?: boolean, filter?: RegExp) => {\n        keys: () => string[];\n        (key: string): string;\n    };\n};\n\nconst images = require.context('src/Components/CharacterData/img', false, /\\.(png|jpe?g|svg)$/);\n\nconst characterDataList:CharacterData[] = [\n    {\n        name: '伊達あやね',\n        gender: 'バ美肉',\n        img: images('./IMG_5721.jpeg'),\n        questionText: '伊達あやねの性別は？',\n        answerKey: 'select2',\n        selects:{\n            select1: '男',\n            select2: '女',\n            select3: 'バ美肉',\n            select4: '不明',\n        },\n    },{\n        name: '若葉まこと',\n        gender: '男',\n        img: images('./82781840_p0_master1200.jpg'),\n        questionText: '若葉まことの性別は？',\n        answerKey: 'select2',\n        selects:{\n            select1: '男',\n            select2: '女',\n            select3: 'バ美肉',\n            select4: '不明',\n        },\n    },{\n        name: '兎鞠まり',\n        gender: 'バ美肉',\n        img: images('./Fsn-L6caYAAnl2g.jpg-small.jpeg'),\n        questionText: '兎鞠まりの性別は？',\n        answerKey: 'select2',\n        selects:{\n            select1: 'おじさん',\n            select2: '女児',\n            select3: 'バ美肉',\n            select4: '不明',\n        },\n    },{\n        name: 'バード・ドーパント',\n        gender: '不明',\n        img: images('./birdDopant.jpg'),\n        questionText: 'バード・ドーパントの性別は？',\n        answerKey: 'select4',\n        selects:{\n            select1: '男',\n            select2: '女',\n            select3: '怪人',\n            select4: '不明',\n        },\n    },{\n        name: '凪原涼菜',\n        gender: '女',\n        img: images('./IMG_5266.jpg'),\n        questionText: '凪原涼菜とは？',\n        answerKey: ['select1','select2','select3','select4'],\n        selects:{\n            select1: '歌姫',\n            select2: '女神',\n            select3: '救世主',\n            select4: '天使',\n        },\n    },{\n        name: '孔雀(クジャク)',\n        gender: '雄',\n        img: images('./02e195a89e8ad1d42aecfe3dd63f231f_t.jpeg'),\n        questionText: '画像の孔雀(クジャク)の性別は何でしょう？',\n        answerKey: 'select1',\n        selects:{\n            select1: '雄(オス)',\n            select2: '雌(メス)',\n            select3: '可変性生物',\n            select4: '判別不可',\n        },\n    },{\n        name: '孔雀(クジャク)',\n        gender: '雌',\n        img: images('./Unknown.jpeg'),\n        questionText: '画像の孔雀(クジャク)の性別は何でしょう？',\n        answerKey: 'select2',\n        selects:{\n            select1: '雄(オス)',\n            select2: '雌(メス)',\n            select3: '可変性生物',\n            select4: '判別不可',\n        },\n    },{\n    name: 'こたつネコ',\n    gender: '不明',\n    img: images('./cat_kotatsu_neko.png'),\n    questionText: '猫の気持ちを答えなさい',\n    answerKey: 'select2',\n    selects:{\n        select1: '空腹',\n        select2: '満腹',\n        select3: '遊んで欲しい',\n        select4: '眠い',\n    },\n    },{\n        name: '海辺で出会った少女(?)',\n        gender: '不明',\n        img: images('./chatmini_1723616773310410.jpg'),\n        questionText: '画像の人物の性別を答えなさい',\n        answerKey: 'select4',\n        selects:{\n            select1: '男',\n            select2: '女',\n            select3: 'ロボット',\n            select4: '不明',\n        },\n    },{\n        name: '帰省先で出会った少女(?)',\n        gender: '不明',\n        img: images('./chatmini_1723616809968043.jpg'),\n        questionText: '画像の人物の性別を答えなさい',\n        answerKey: 'select4',\n        selects:{\n            select1: '男',\n            select2: '女',\n            select3: 'ロボット',\n            select4: '不明',\n        },\n    },\n    // {\n    //     name: '',\n    //     gender: '',\n    //     img: images('./'),\n    //     questionText: '',\n    //     answerKey: 'select',\n    //     selects:{\n    //         select1: '',\n    //         select2: '',\n    //         select3: '',\n    //         select4: '',\n    //     },\n    // },\n];\n\nexport default characterDataList;","import 'src/Components/SelectGenderButton/SGButton.scss';\nimport { useEffect, useCallback, useRef, MouseEventHandler } from \"react\";\nimport { ClickData } from 'src/Components/SelectGenderButton/SGInterface';\n\nconst CustomButton: React.FC<ClickData> = ({ characterItem, clickData, showPopup }) => {\n    const buttonRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n    useEffect(() => {\n        buttonRefs.current.forEach(button => {\n            if (button) {\n                const textLength = button.innerText.length;\n                let fontSize = 24;\n\n                if (textLength > 3) {\n                    fontSize = 18;\n                }\n                if (textLength > 5) {\n                    fontSize = 15;\n                }\n                if (textLength > 7) {\n                    fontSize = 12;\n                }\n\n                button.style.fontSize = `${fontSize}px`;\n            }\n        });\n    }, [characterItem]);\n    \n    const handleClick: MouseEventHandler<HTMLButtonElement>  = useCallback ((event) => {\n        const selectGender = event.currentTarget.dataset.select || '';\n        console.log(selectGender+'がクリックされました');\n        clickData(selectGender);\n    },[]);\n    \n    return (\n        <div className='selectGrid'>\n            {[0, 1, 2, 3].map(index => {\n                const selectKey = `select${index + 1}` as keyof typeof characterItem.selects;\n                const selectButton = characterItem.selects[selectKey];\n\n                return (\n                    <button\n                        className='customButton'\n                        key={index}\n                        onClick={handleClick}\n                        data-select={selectButton}\n                        disabled={showPopup}\n                        ref={(el) => buttonRefs.current[index] = el}\n                    >\n                        {selectButton}\n                    </button>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default CustomButton;","import React, { useEffect } from 'react';\nimport { CheckAnswerProps } from 'src/Components/System/systemInterface';\n\nconst CheckAnswer: React.FC<CheckAnswerProps> = ({ clickData, characterItem, setIsCorrect, showPopup, setShowPopup, setCorrectCounter }) => {\n    useEffect(() => {\n        if (clickData && !showPopup && characterItem) {\n            const correctAnswer = characterItem.answerKey;\n            let isCorrectAnswer = false;\n            \n            if (Array.isArray(correctAnswer)) {\n                const correctAnswers = correctAnswer.map(key => characterItem.selects[key as keyof typeof characterItem.selects]);\n                isCorrectAnswer = correctAnswers.includes(clickData);\n            } else {\n                const singleCorrectAnswer = characterItem.selects[correctAnswer as keyof typeof characterItem.selects];\n                isCorrectAnswer = clickData === singleCorrectAnswer;\n            }\n\n            if (isCorrectAnswer) {\n                console.log('正解！')\n                setShowPopup(true);\n                setIsCorrect(true);\n                setCorrectCounter(prevCorrectCounter => prevCorrectCounter + 1);\n            }else {\n                console.log('残念！')\n                setShowPopup(true);\n                setIsCorrect(false);\n            };\n        }\n    },[clickData]);\n    \n    return (\n        null\n    );\n};\n\nexport default CheckAnswer;","import { ClickCounterProps } from 'src/Components/System/systemInterface';\n\nconst ClickCounter: React.FC<ClickCounterProps> = ({ counter, questionLimit }) => {\n    return (\n        <div className=\"clickCounter\">\n            <p>{counter}/{questionLimit}</p>\n        </div>\n    );\n};\n\nexport default ClickCounter;","import 'src/Components/System/system.scss';\nimport { Link } from 'react-router-dom';\nimport { PopupProps } from 'src/Components/System/systemInterface';\n\nconst Popup: React.FC<PopupProps> = ({ nextQuestion, isCorrect, counter, questionLimit, correctCounter }) => {\n  const iconClass = isCorrect ? 'oxIcon correct' : 'oxIcon inCorrect';\n\n  if (counter < questionLimit) {          \n    return (\n        <div className=\"popup\">\n          <div className=\"popupContent\">\n            <p className={ iconClass }>{ isCorrect ? 'O' : 'X' }</p>\n            <p className='popupText'>{ isCorrect ? '正解！' : '残念！' }</p>\n            <button onClick={nextQuestion} className='nextButton'>次の問題へ</button>\n          </div>\n        </div>\n      );\n  }else{\n    return(\n      <div className=\"popup\">\n        <div className=\"popupContent\">\n          <p className={ iconClass }>{ isCorrect ? 'O' : 'X' }</p>\n          <p className='popupText'>{ isCorrect ? '正解！' : '残念！' }</p>\n          <Link\n            to='/Result/Result'\n            state= {{ correctCounter, questionLimit }}\n            className='nextButton'\n          >\n            結果発表\n          </Link>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Popup;","import 'src/Components/gameComponent.scss';\nimport React, { useState, useEffect } from 'react';\nimport { CharacterData } from 'src/Components/CharacterData/characterDataInterface';\nimport characterDataList from 'src/Components/CharacterData/characterData';\nimport SGButton from 'src/Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'src/Components/System/CheckAnswer';\nimport ClickCounter from 'src/Components/System/ClickCounter';\nimport Popup from 'src/Components/System/Popup';\n\nconst shuffleArray = (array: CharacterData[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nconst GameComponent: React.FC = () => {\n    const [ clickData, setClickData ] = useState<string>('');\n    const [ characterQueue, setCharacterQueue ] = useState<CharacterData[]>([]);\n    const [ characterItem, setCharacterItem ] = useState<CharacterData | null>(null);\n    const [ showPopup, setShowPopup ] = useState(false);\n    const [ isCorrect, setIsCorrect ] = useState(false);\n    const [ counter, setCounter ] = useState<number>(1);\n    const [ correctCounter, setCorrectCounter ] = useState<number>(0);\n\n    const questionLimit = 5;\n\n    const pushButtonData = (clickData: string) => {\n        setClickData(clickData)\n    };\n\n    const nextQuestion = () => {\n        if (characterQueue.length === 0) {\n            const shuffledCharacters = shuffleArray([...characterDataList]);\n            setCharacterQueue(shuffledCharacters);\n        }\n\n        const newCharacterItem = characterQueue[0];\n        setCharacterQueue(characterQueue.slice(1));\n        setCharacterItem(newCharacterItem);\n        \n        setClickData('');\n        setShowPopup(false);\n        setCounter(prevCounter => prevCounter + 1);\n    };\n\n    useEffect(() => {\n        if (characterDataList.length > 0) {\n            const shuffledCharacters = shuffleArray([...characterDataList]);\n            setCharacterQueue(shuffledCharacters);\n            setCounter(0);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (characterQueue.length > 0 && !characterItem) {\n            nextQuestion();\n        }\n    }, [characterQueue, characterItem]);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <div className='gameScreen'>\n            <div className='question'>\n                <img className='characterImg' src={characterItem.img} alt={characterItem.name} />\n                <p className='characterName'>{characterItem.name}</p>\n                <p className='questionText'>Q.&nbsp;{characterItem.questionText}</p>\n            </div>\n            <SGButton characterItem={ characterItem } clickData={ pushButtonData } showPopup={showPopup}/>\n            <CheckAnswer\n                clickData={clickData}\n                characterItem={characterItem}\n                setIsCorrect={setIsCorrect}\n                showPopup={showPopup}\n                setShowPopup={setShowPopup}\n                isCorrect={isCorrect}\n                correctCounter={correctCounter}\n                setCorrectCounter={setCorrectCounter}\n                selects={characterItem.selects}\n                answerKey={characterItem.answerKey}\n            />\n            <ClickCounter counter={counter} questionLimit={questionLimit}/>\n            {showPopup && \n                <Popup \n                    clickData={clickData}\n                    characterItem={characterItem}\n                    setIsCorrect={setIsCorrect}\n                    showPopup={showPopup}\n                    setShowPopup={setShowPopup}\n                    nextQuestion={nextQuestion}\n                    isCorrect={isCorrect}\n                    counter={counter}\n                    questionLimit={questionLimit}\n                    correctCounter={correctCounter}\n                />\n            }\n        </div>\n    );\n};\n\nexport default GameComponent;","var map = {\n\t\"./02e195a89e8ad1d42aecfe3dd63f231f_t.jpeg\": 616,\n\t\"./82781840_p0_master1200.jpg\": 348,\n\t\"./Fsn-L6caYAAnl2g.jpg-small.jpeg\": 129,\n\t\"./IMG_5266.jpg\": 184,\n\t\"./IMG_5721.jpeg\": 39,\n\t\"./Unknown.jpeg\": 620,\n\t\"./birdDopant.jpg\": 704,\n\t\"./cat_kotatsu_neko.png\": 163,\n\t\"./chatmini_1723616773310410.jpg\": 477,\n\t\"./chatmini_1723616809968043.jpg\": 424\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 358;"],"names":["images","require","name","gender","img","questionText","answerKey","selects","select1","select2","select3","select4","_ref","characterItem","clickData","showPopup","buttonRefs","useRef","useEffect","current","forEach","button","textLength","innerText","length","fontSize","style","concat","handleClick","useCallback","event","selectGender","currentTarget","dataset","select","console","log","_jsx","className","children","map","index","selectKey","selectButton","onClick","disabled","ref","el","setIsCorrect","setShowPopup","setCorrectCounter","correctAnswer","isCorrectAnswer","Array","isArray","key","includes","singleCorrectAnswer","prevCorrectCounter","counter","questionLimit","_jsxs","nextQuestion","isCorrect","correctCounter","iconClass","Link","to","state","shuffleArray","array","i","j","Math","floor","random","GameComponent","setClickData","useState","characterQueue","setCharacterQueue","setCharacterItem","setCounter","shuffledCharacters","characterDataList","newCharacterItem","slice","prevCounter","src","alt","SGButton","CheckAnswer","ClickCounter","Popup","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}