{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/GenderQuestions/frontend/src/Components/GameComponent.tsx\",\n  _s = $RefreshSig$();\nimport 'src/Components/gameComponent.scss';\nimport React, { useState, useEffect } from 'react';\nimport characterDataList from 'src/Components/CharacterData/characterData';\nimport SGButton from 'src/Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'src/Components/System/CheckAnswer';\nimport ClickCounter from 'src/Components/System/ClickCounter';\nimport Popup from 'src/Components/System/Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameComponent = () => {\n  _s();\n  const [clickData, setClickData] = useState('');\n  const [characterItem, setCharacterItem] = useState(null);\n  const [prevCharacterItem, setPrevCharacterItem] = useState(null);\n  const [previousCharacters, setPreviousCharacters] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [counter, setCounter] = useState(1);\n  const [correctCounter, setCorrectCounter] = useState(0);\n  const questionLimit = 3;\n  const pushButtonData = clickData => {\n    setClickData(clickData);\n  };\n  const nextQuestion = () => {\n    if (characterDataList.length > 0) {\n      const filteredList = characterDataList.filter(item => !previousCharacters.some(prevItem => prevItem.name === item.name));\n      let newCharacterItem;\n      if (filteredList.length > 0) {\n        const randomIndex = Math.floor(Math.random() * filteredList.length);\n        newCharacterItem = filteredList[randomIndex];\n      } else {\n        const randomIndex = Math.floor(Math.random() * characterDataList.length);\n        newCharacterItem = characterDataList[randomIndex];\n      }\n      setPreviousCharacters(prev => {\n        const newPrevious = [newCharacterItem, ...prev].slice(0, questionLimit);\n        return newPrevious;\n      });\n      setPrevCharacterItem(characterItem);\n      setCharacterItem(newCharacterItem);\n    }\n    setClickData('');\n    setShowPopup(false);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n  useEffect(() => {\n    if (characterDataList.length > 0) {\n      nextQuestion();\n      setCounter(1);\n    }\n  }, []);\n  if (!characterItem) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this); // データがまだ読み込まれていない場合のローディング表示\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionCharacterImg\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u3053\\u3053\\u306B\\u753B\\u50CF\\u304C\\u5165\\u308A\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"characterName\",\n        children: characterItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SGButton, {\n      clickData: pushButtonData,\n      showPopup: showPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckAnswer, {\n      clickData: clickData,\n      characterItem: characterItem,\n      setIsCorrect: setIsCorrect,\n      showPopup: showPopup,\n      setShowPopup: setShowPopup,\n      isCorrect: isCorrect,\n      correctCounter: correctCounter,\n      setCorrectCounter: setCorrectCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {\n      counter: counter,\n      questionLimit: questionLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      clickData: clickData,\n      characterItem: characterItem,\n      setIsCorrect: setIsCorrect,\n      showPopup: showPopup,\n      setShowPopup: setShowPopup,\n      nextQuestion: nextQuestion,\n      isCorrect: isCorrect,\n      counter: counter,\n      questionLimit: questionLimit,\n      correctCounter: correctCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(GameComponent, \"K5ua7X7uAxUXN8kQG/NXwf10R3s=\");\n_c = GameComponent;\nexport default GameComponent;\nvar _c;\n$RefreshReg$(_c, \"GameComponent\");","map":{"version":3,"names":["React","useState","useEffect","characterDataList","SGButton","CheckAnswer","ClickCounter","Popup","jsxDEV","_jsxDEV","GameComponent","_s","clickData","setClickData","characterItem","setCharacterItem","prevCharacterItem","setPrevCharacterItem","previousCharacters","setPreviousCharacters","showPopup","setShowPopup","isCorrect","setIsCorrect","counter","setCounter","correctCounter","setCorrectCounter","questionLimit","pushButtonData","nextQuestion","length","filteredList","filter","item","some","prevItem","name","newCharacterItem","randomIndex","Math","floor","random","prev","newPrevious","slice","prevCounter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/GenderQuestions/frontend/src/Components/GameComponent.tsx"],"sourcesContent":["import 'src/Components/gameComponent.scss';\nimport React, { useState, useEffect } from 'react';\nimport { CharacterData } from 'src/Components/CharacterData/characterDataInterface';\nimport characterDataList from 'src/Components/CharacterData/characterData';\nimport SGButton from 'src/Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'src/Components/System/CheckAnswer';\nimport ClickCounter from 'src/Components/System/ClickCounter';\nimport Popup from 'src/Components/System/Popup';\n\nconst GameComponent: React.FC = () => {\n    const [ clickData, setClickData ] = useState<string>('');\n    const [ characterItem, setCharacterItem ] = useState<CharacterData | null>(null);\n    const [ prevCharacterItem, setPrevCharacterItem ] = useState<CharacterData | null>(null);\n    const [ previousCharacters, setPreviousCharacters ] = useState<CharacterData[]>([]);\n    const [ showPopup, setShowPopup ] = useState(false);\n    const [ isCorrect, setIsCorrect ] = useState(false);\n    const [ counter, setCounter ] = useState<number>(1);\n    const [ correctCounter, setCorrectCounter ] = useState<number>(0);\n\n    const questionLimit = 3;\n\n    const pushButtonData = (clickData: string) => {\n        setClickData(clickData)\n    };\n\n    const nextQuestion = () => {\n        if (characterDataList.length > 0) {\n            const filteredList = characterDataList.filter(item => !previousCharacters.some(prevItem => prevItem.name === item.name));\n            let newCharacterItem: CharacterData;\n            \n            if (filteredList.length > 0) {\n                const randomIndex = Math.floor(Math.random() * filteredList.length);\n                newCharacterItem = filteredList[randomIndex];\n            } else {\n                const randomIndex = Math.floor(Math.random() * characterDataList.length);\n                newCharacterItem = characterDataList[randomIndex];\n            }\n            \n            setPreviousCharacters(prev => {\n                const newPrevious = [newCharacterItem, ...prev].slice(0, questionLimit);\n                return newPrevious;\n            });\n    \n            setPrevCharacterItem(characterItem);\n            setCharacterItem(newCharacterItem);\n        }\n        setClickData('');\n        setShowPopup(false);\n        setCounter(prevCounter => prevCounter + 1);\n    };\n\n    useEffect(() => {\n        if (characterDataList.length > 0) {\n            nextQuestion();\n            setCounter(1);\n        }\n    }, []);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <div className='gameScreen'>\n            <div className='questionText'>\n                <div className='questionCharacterImg'><p>ここに画像が入ります</p></div>\n                <p className='characterName'>{characterItem.name}</p>\n            </div>    \n            <SGButton clickData={ pushButtonData } showPopup={showPopup}/>\n            <CheckAnswer\n                clickData={clickData}\n                characterItem={characterItem}\n                setIsCorrect={setIsCorrect}\n                showPopup={showPopup}\n                setShowPopup={setShowPopup}\n                isCorrect={isCorrect}\n                correctCounter={correctCounter}\n                setCorrectCounter={setCorrectCounter}\n            />\n            <ClickCounter counter={counter} questionLimit={questionLimit}/>\n            {showPopup && \n                <Popup \n                    clickData={clickData}\n                    characterItem={characterItem}\n                    setIsCorrect={setIsCorrect}\n                    showPopup={showPopup}\n                    setShowPopup={setShowPopup}\n                    nextQuestion={nextQuestion}\n                    isCorrect={isCorrect}\n                    counter={counter}\n                    questionLimit={questionLimit}\n                    correctCounter={correctCounter}\n                />\n            }\n        </div>\n    );\n};\n\nexport default GameComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}