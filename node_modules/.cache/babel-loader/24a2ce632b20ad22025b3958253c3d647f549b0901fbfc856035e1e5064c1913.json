{"ast":null,"code":"import'Components/gameComponent.scss';import React,{useState,useEffect}from'react';import characterDataList from'Components/CharacterData/characterData';import SGButton from'Components/SelectGenderButton/SGButton';import CheckAnswer from'Components/System/CheckAnswer';import ClickCounter from'Components/System/ClickCounter';import Popup from'Components/System/Popup/Popup';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const shuffleArray=array=>{for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]];}return array;};const GameComponent=()=>{const[clickData,setClickData]=useState('');const[characterQueue,setCharacterQueue]=useState([]);const[characterItem,setCharacterItem]=useState(null);const[showPopup,setShowPopup]=useState(false);const[isCorrect,setIsCorrect]=useState(false);const[counter,setCounter]=useState(1);const[correctCounter,setCorrectCounter]=useState(0);const questionLimit=5;const pushButtonData=clickData=>{setClickData(clickData);};const nextQuestion=()=>{if(characterQueue.length===0){const shuffledCharacters=shuffleArray([...characterDataList]);setCharacterQueue(shuffledCharacters);}const newCharacterItem=characterQueue[0];setCharacterQueue(characterQueue.slice(1));setCharacterItem(newCharacterItem);setClickData('');setShowPopup(false);setCounter(prevCounter=>prevCounter+1);};useEffect(()=>{if(characterDataList.length>0){const shuffledCharacters=shuffleArray([...characterDataList]);setCharacterQueue(shuffledCharacters);setCounter(0);}},[]);useEffect(()=>{if(characterQueue.length>0&&!characterItem){nextQuestion();}},[characterQueue,characterItem]);if(!characterItem){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// データがまだ読み込まれていない場合のローディング表示\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"gameScreen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"characterImg\",src:characterItem.img,alt:characterItem.name}),/*#__PURE__*/_jsx(\"p\",{className:\"characterName\",children:characterItem.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"questionText\",children:[\"Q.\\xA0\",characterItem.questionText]})]}),/*#__PURE__*/_jsx(SGButton,{characterItem:characterItem,clickData:pushButtonData,showPopup:showPopup}),/*#__PURE__*/_jsx(CheckAnswer,{clickData:clickData,characterItem:characterItem,setIsCorrect:setIsCorrect,showPopup:showPopup,setShowPopup:setShowPopup,isCorrect:isCorrect,correctCounter:correctCounter,setCorrectCounter:setCorrectCounter,selects:characterItem.selects,answerKey:characterItem.answerKey}),/*#__PURE__*/_jsx(ClickCounter,{counter:counter,questionLimit:questionLimit}),showPopup&&/*#__PURE__*/_jsx(Popup,{clickData:clickData,characterItem:characterItem,setIsCorrect:setIsCorrect,showPopup:showPopup,setShowPopup:setShowPopup,nextQuestion:nextQuestion,isCorrect:isCorrect,counter:counter,questionLimit:questionLimit,correctCounter:correctCounter,answerKey:characterItem.answerKey,explanation:characterItem.explanation})]});};export default GameComponent;","map":{"version":3,"names":["React","useState","useEffect","characterDataList","SGButton","CheckAnswer","ClickCounter","Popup","jsx","_jsx","jsxs","_jsxs","shuffleArray","array","i","length","j","Math","floor","random","GameComponent","clickData","setClickData","characterQueue","setCharacterQueue","characterItem","setCharacterItem","showPopup","setShowPopup","isCorrect","setIsCorrect","counter","setCounter","correctCounter","setCorrectCounter","questionLimit","pushButtonData","nextQuestion","shuffledCharacters","newCharacterItem","slice","prevCounter","children","className","src","img","alt","name","questionText","selects","answerKey","explanation"],"sources":["/Users/itouhiroki/Desktop/GenderQuestions/src/Components/GameComponent.tsx"],"sourcesContent":["import 'Components/gameComponent.scss';\nimport React, { useState, useEffect } from 'react';\nimport { CharacterData } from 'Components/CharacterData/characterDataInterface';\nimport characterDataList from 'Components/CharacterData/characterData';\nimport SGButton from 'Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'Components/System/CheckAnswer';\nimport ClickCounter from 'Components/System/ClickCounter';\nimport Popup from 'Components/System/Popup/Popup';\n\nconst shuffleArray = (array: CharacterData[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nconst GameComponent: React.FC = () => {\n    const [ clickData, setClickData ] = useState<string>('');\n    const [ characterQueue, setCharacterQueue ] = useState<CharacterData[]>([]);\n    const [ characterItem, setCharacterItem ] = useState<CharacterData | null>(null);\n    const [ showPopup, setShowPopup ] = useState(false);\n    const [ isCorrect, setIsCorrect ] = useState(false);\n    const [ counter, setCounter ] = useState<number>(1);\n    const [ correctCounter, setCorrectCounter ] = useState<number>(0);\n\n    const questionLimit = 5;\n\n    const pushButtonData = (clickData: string) => {\n        setClickData(clickData)\n    };\n\n    const nextQuestion = () => {\n        if (characterQueue.length === 0) {\n            const shuffledCharacters = shuffleArray([...characterDataList]);\n            setCharacterQueue(shuffledCharacters);\n        }\n\n        const newCharacterItem = characterQueue[0];\n        setCharacterQueue(characterQueue.slice(1));\n        setCharacterItem(newCharacterItem);\n        \n        setClickData('');\n        setShowPopup(false);\n        setCounter(prevCounter => prevCounter + 1);\n    };\n\n    useEffect(() => {\n        if (characterDataList.length > 0) {\n            const shuffledCharacters = shuffleArray([...characterDataList]);\n            setCharacterQueue(shuffledCharacters);\n            setCounter(0);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (characterQueue.length > 0 && !characterItem) {\n            nextQuestion();\n        }\n    }, [characterQueue, characterItem]);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <div className='gameScreen'>\n            <div className='question'>\n                <img className='characterImg' src={characterItem.img} alt={characterItem.name} />\n                <p className='characterName'>{characterItem.name}</p>\n                <p className='questionText'>Q.&nbsp;{characterItem.questionText}</p>\n            </div>\n            <SGButton characterItem={ characterItem } clickData={ pushButtonData } showPopup={showPopup}/>\n            <CheckAnswer\n                clickData={clickData}\n                characterItem={characterItem}\n                setIsCorrect={setIsCorrect}\n                showPopup={showPopup}\n                setShowPopup={setShowPopup}\n                isCorrect={isCorrect}\n                correctCounter={correctCounter}\n                setCorrectCounter={setCorrectCounter}\n                selects={characterItem.selects}\n                answerKey={characterItem.answerKey}\n            />\n            <ClickCounter counter={counter} questionLimit={questionLimit}/>\n            {showPopup && \n                <Popup \n                    clickData={clickData}\n                    characterItem={characterItem}\n                    setIsCorrect={setIsCorrect}\n                    showPopup={showPopup}\n                    setShowPopup={setShowPopup}\n                    nextQuestion={nextQuestion}\n                    isCorrect={isCorrect}\n                    counter={counter}\n                    questionLimit={questionLimit}\n                    correctCounter={correctCounter}\n                    answerKey={characterItem.answerKey}\n                    explanation={characterItem.explanation}\n                />\n            }\n        </div>\n    );\n};\n\nexport default GameComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}