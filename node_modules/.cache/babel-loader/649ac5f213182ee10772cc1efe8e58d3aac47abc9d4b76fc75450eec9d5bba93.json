{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/ox_game/frontend/src/Components/GameComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CharacterDataList from 'src/Components/CharacterData/CharacterData';\nimport SGButton from 'src/Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'src/Components/System/CheckAnswer';\nimport ClickCounter from 'src/Components/System/ClickCounter';\nimport Popup from 'src/Components/System/Popup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameComponent = () => {\n  _s();\n  const [clickData, setClickData] = useState('');\n  const [characterItem, setCharacterItem] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const pushButtonData = data => {\n    setClickData(data);\n  };\n  const nextQuestion = conut => {\n    if (CharacterDataList.length > 0) {\n      const randomIndex = Math.floor(Math.random() * CharacterDataList.length);\n      setCharacterItem(CharacterDataList[randomIndex]);\n    }\n    setClickData('');\n    setShowPopup(false);\n    console.log(counter);\n  };\n\n  // const handleCountChange = (count: number) => {\n  //     console.log(count);\n  // }\n\n  useEffect(() => {\n    if (CharacterDataList.length > 0) {\n      nextQuestion();\n    }\n  }, []);\n  if (!characterItem) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this); // データがまだ読み込まれていない場合のローディング表示\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: characterItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SGButton, {\n      clickData: pushButtonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CheckAnswer, {\n      clickData: clickData,\n      characterItem: characterItem,\n      onResult: setIsCorrect,\n      showPopup: showPopup,\n      onShowPopup: setShowPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {\n      onCountChange: nextQuestion,\n      characterItem: characterItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      nextQuestion: nextQuestion,\n      isCorrect: isCorrect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(GameComponent, \"QWcNoWGNysPR4vG/H5zI45YwLZ0=\");\n_c = GameComponent;\nexport default GameComponent;\nvar _c;\n$RefreshReg$(_c, \"GameComponent\");","map":{"version":3,"names":["React","useState","useEffect","CharacterDataList","SGButton","CheckAnswer","ClickCounter","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","GameComponent","_s","clickData","setClickData","characterItem","setCharacterItem","showPopup","setShowPopup","isCorrect","setIsCorrect","pushButtonData","data","nextQuestion","conut","length","randomIndex","Math","floor","random","console","log","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onResult","onShowPopup","onCountChange","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/ox_game/frontend/src/Components/GameComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CharacterDataList from 'src/Components/CharacterData/CharacterData';\nimport SGButton from 'src/Components/SelectGenderButton/SGButton';\nimport CheckAnswer from 'src/Components/System/CheckAnswer';\nimport ClickCounter from 'src/Components/System/ClickCounter';\nimport Popup from 'src/Components/System/Popup';\n\ninterface characterData {\n    name: string;\n    gender: string;\n}\n\nconst GameComponent: React.FC = () => {\n    const [ clickData, setClickData ] = useState<string>('');\n    const [ characterItem, setCharacterItem ] = useState<characterData | null>(null);\n    const [ showPopup, setShowPopup ] = useState(false);\n    const [ isCorrect, setIsCorrect ] = useState(false);\n\n    const pushButtonData = (data: string) => {\n        setClickData(data)\n    };\n\n    const nextQuestion = (conut: number) => {\n        if (CharacterDataList.length > 0) {\n            const randomIndex = Math.floor(Math.random() * CharacterDataList.length);\n            setCharacterItem(CharacterDataList[randomIndex]);\n        }\n        setClickData('');\n        setShowPopup(false);\n        console.log(counter)\n    };\n\n    // const handleCountChange = (count: number) => {\n    //     console.log(count);\n    // }\n\n    useEffect(() => {\n        if (CharacterDataList.length > 0) {\n            nextQuestion();\n        }\n    }, []);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <>\n        <p>{characterItem.name}</p>\n        <SGButton clickData={ pushButtonData }/>\n        <CheckAnswer\n          clickData={clickData}\n          characterItem={characterItem}\n          onResult={setIsCorrect}\n          showPopup={showPopup}\n          onShowPopup={setShowPopup}\n        />\n        <ClickCounter onCountChange={nextQuestion} characterItem={characterItem.name}/>\n        {showPopup && <Popup nextQuestion={nextQuestion} isCorrect={isCorrect} />}\n        </>\n    );\n};\n\nexport default GameComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}