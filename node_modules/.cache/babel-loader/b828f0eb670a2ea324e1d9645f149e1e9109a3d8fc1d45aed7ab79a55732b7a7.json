{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/ox_game/frontend/src/Component/GameComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CharacterDataList } from 'src/Component/CharacterData/CharacterData';\nimport SGButton from 'src/Component/SelectGenderButton/SGButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameComponent = () => {\n  _s();\n  const [ClickData, setClickData] = useState('');\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [characterItem, setCharacterItem] = useState(null);\n  const pushButtonData = data => {\n    setClickData(data);\n  };\n  useEffect(() => {\n    if (CharacterDataList.length > 0) {\n      setCharacterItem(CharacterDataList[0]);\n    }\n  }, []);\n  useEffect(() => {\n    // 初回レンダリング時は処理をスキップする\n    if (isFirstRender) {\n      setIsFirstRender(false);\n      return;\n    }\n    if (characterItem && ClickData === characterItem.gender) {\n      console.log('正解！');\n    } else {\n      console.log('残念！');\n    }\n    ;\n  }, [ClickData, isFirstRender, characterItem]);\n  useEffect(() => {\n    var _CharacterDataList$;\n    // 初回レンダリング時に ClickData を初期化する\n    setClickData(((_CharacterDataList$ = CharacterDataList[0]) === null || _CharacterDataList$ === void 0 ? void 0 : _CharacterDataList$.gender) || '');\n  }, [characterItem]);\n  if (!characterItem) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this); // データがまだ読み込まれていない場合のローディング表示\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: characterItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SGButton, {\n      ClickData: pushButtonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(GameComponent, \"maZGQKi/HC0NUdqrlu72dk22jdc=\");\n_c = GameComponent;\nexport default GameComponent;\nvar _c;\n$RefreshReg$(_c, \"GameComponent\");","map":{"version":3,"names":["React","useState","useEffect","CharacterDataList","SGButton","jsxDEV","_jsxDEV","Fragment","_Fragment","GameComponent","_s","ClickData","setClickData","isFirstRender","setIsFirstRender","characterItem","setCharacterItem","pushButtonData","data","length","gender","console","log","_CharacterDataList$","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/ox_game/frontend/src/Component/GameComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CharacterDataList } from 'src/Component/CharacterData/CharacterData';\nimport SGButton from 'src/Component/SelectGenderButton/SGButton';\n\ninterface CharacterData {\n    name: string;\n    gender: string;\n}\n\nconst GameComponent: React.FC = () => {\n    const [ ClickData, setClickData ] = useState<string>('');\n    const [ isFirstRender, setIsFirstRender ] = useState(true);\n    const [characterItem, setCharacterItem] = useState<CharacterData | null>(null);\n    \n    const pushButtonData = (data: string) => {\n        setClickData(data)\n    };\n\n    useEffect(() => {\n        if (CharacterDataList.length > 0) {\n            setCharacterItem(CharacterDataList[0]);\n        }\n    }, []);\n    \n    useEffect(() => {\n        // 初回レンダリング時は処理をスキップする\n        if (isFirstRender) {\n            setIsFirstRender(false);\n            return;\n        }\n\n        if (characterItem && ClickData === characterItem.gender) {\n            console.log('正解！')\n        }else {\n            console.log('残念！')\n        };\n    },[ClickData, isFirstRender, characterItem]);\n\n    useEffect(() => {\n        // 初回レンダリング時に ClickData を初期化する\n        setClickData(CharacterDataList[0]?.gender || '');\n    }, [characterItem]);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <>\n        <p>{characterItem.name}</p>\n        <SGButton ClickData={ pushButtonData }/>\n        </>\n    );\n};\n\nexport default GameComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,2CAA2C;AAC7E,OAAOC,QAAQ,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOjE,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGX,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAAEY,aAAa,EAAEC,gBAAgB,CAAE,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAuB,IAAI,CAAC;EAE9E,MAAMgB,cAAc,GAAIC,IAAY,IAAK;IACrCN,YAAY,CAACM,IAAI,CAAC;EACtB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,IAAIC,iBAAiB,CAACgB,MAAM,GAAG,CAAC,EAAE;MAC9BH,gBAAgB,CAACb,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEND,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,aAAa,EAAE;MACfC,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACJ;IAEA,IAAIC,aAAa,IAAIJ,SAAS,KAAKI,aAAa,CAACK,MAAM,EAAE;MACrDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACtB,CAAC,MAAK;MACFD,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACtB;IAAC;EACL,CAAC,EAAC,CAACX,SAAS,EAAEE,aAAa,EAAEE,aAAa,CAAC,CAAC;EAE5Cb,SAAS,CAAC,MAAM;IAAA,IAAAqB,mBAAA;IACZ;IACAX,YAAY,CAAC,EAAAW,mBAAA,GAAApB,iBAAiB,CAAC,CAAC,CAAC,cAAAoB,mBAAA,uBAApBA,mBAAA,CAAsBH,MAAM,KAAI,EAAE,CAAC;EACpD,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,IAAI,CAACA,aAAa,EAAE;IAChB,oBAAOT,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC9B;EAEA,oBACItB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,EAAIT,aAAa,CAACc;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA,CAACF,QAAQ;MAACO,SAAS,EAAGM;IAAgB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACtC,CAAC;AAEX,CAAC;AAAClB,EAAA,CA5CID,aAAuB;AAAAqB,EAAA,GAAvBrB,aAAuB;AA8C7B,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}