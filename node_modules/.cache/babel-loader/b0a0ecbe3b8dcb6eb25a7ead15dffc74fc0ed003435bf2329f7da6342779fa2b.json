{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/GenderQuestions/src/Components/SelectGenderButton/SGButton.tsx\",\n  _s = $RefreshSig$();\nimport 'src/Components/SelectGenderButton/SGButton.scss';\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomButton = ({\n  characterItem,\n  clickData,\n  showPopup\n}) => {\n  _s();\n  const buttonRefs = useRef([]);\n  useEffect(() => {\n    if (buttonRefs.current.length > 0) {\n      const maxHeight = Math.max(...buttonRefs.current.map(button => button.offsetHeight));\n      buttonRefs.current.forEach(button => {\n        button.style.height = `${maxHeight}px`;\n      });\n    }\n  }, [characterItem]);\n  const handleClick = useCallback(event => {\n    const selectGender = event.currentTarget.dataset.select || '';\n    console.log(selectGender + 'がクリックされました');\n    clickData(selectGender);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"selectTable\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [0, 1].map(rowIndex => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [0, 1].map(colIndex => {\n          // インデックスに対応する selectキーを動的に作成\n          const selectKey = `select${rowIndex * 2 + colIndex + 1}`;\n          const selectButton = characterItem.selects[selectKey];\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"customButton\",\n              ref: el => buttonRefs.current.push(el),\n              onClick: handleClick,\n              \"data-select\": selectButton,\n              disabled: showPopup,\n              children: selectButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomButton, \"lUlyMY3+mYj85cBkYX96ldys0mw=\");\n_c = CustomButton;\nexport default CustomButton;\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["useCallback","useEffect","useRef","jsxDEV","_jsxDEV","CustomButton","characterItem","clickData","showPopup","_s","buttonRefs","current","length","maxHeight","Math","max","map","button","offsetHeight","forEach","style","height","handleClick","event","selectGender","currentTarget","dataset","select","console","log","className","children","rowIndex","colIndex","selectKey","selectButton","selects","ref","el","push","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/GenderQuestions/src/Components/SelectGenderButton/SGButton.tsx"],"sourcesContent":["import 'src/Components/SelectGenderButton/SGButton.scss';\nimport { useCallback, MouseEventHandler, useEffect, useRef } from \"react\";\nimport { ClickData } from 'src/Components/SelectGenderButton/SGInterface';\n\nconst CustomButton: React.FC<ClickData> = ({ characterItem, clickData, showPopup }) => {\n    const buttonRefs = useRef<HTMLButtonElement[]>([]);\n\n    useEffect(() => {\n        if (buttonRefs.current.length > 0) {\n            const maxHeight = Math.max(...buttonRefs.current.map(button => button.offsetHeight));\n            buttonRefs.current.forEach(button => {\n                button.style.height = `${maxHeight}px`;\n            });\n        }\n    },[characterItem]);\n\n    const handleClick: MouseEventHandler<HTMLButtonElement>  = useCallback ((event) => {\n        const selectGender = event.currentTarget.dataset.select || '';\n        console.log(selectGender+'がクリックされました');\n        clickData(selectGender);\n    },[]);\n    \n    return (\n        <table className='selectTable'>\n            <tbody>\n                {[0, 1].map(rowIndex => (\n                    <tr key={rowIndex}>\n                        {[0, 1].map(colIndex => {\n                            // インデックスに対応する selectキーを動的に作成\n                            const selectKey = `select${rowIndex * 2 + colIndex + 1}` as keyof typeof characterItem.selects;\n                            const selectButton = characterItem.selects[selectKey];\n\n                            return (\n                                <td key={colIndex}>\n                                    <button\n                                        className='customButton'\n                                        ref={el => buttonRefs.current.push(el!)}\n                                        onClick={handleClick}\n                                        data-select={selectButton}\n                                        disabled={showPopup}\n                                    >\n                                        {selectButton}\n                                    </button>\n                                </td>\n                            );\n                        })}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default CustomButton;"],"mappings":";;AAAA,OAAO,iDAAiD;AACxD,SAASA,WAAW,EAAqBC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1E,MAAMC,YAAiC,GAAGA,CAAC;EAAEC,aAAa;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAMC,UAAU,GAAGR,MAAM,CAAsB,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,IAAIS,UAAU,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC/B,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACC,OAAO,CAACK,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,YAAY,CAAC,CAAC;MACpFR,UAAU,CAACC,OAAO,CAACQ,OAAO,CAACF,MAAM,IAAI;QACjCA,MAAM,CAACG,KAAK,CAACC,MAAM,GAAI,GAAER,SAAU,IAAG;MAC1C,CAAC,CAAC;IACN;EACJ,CAAC,EAAC,CAACP,aAAa,CAAC,CAAC;EAElB,MAAMgB,WAAiD,GAAItB,WAAW,CAAGuB,KAAK,IAAK;IAC/E,MAAMC,YAAY,GAAGD,KAAK,CAACE,aAAa,CAACC,OAAO,CAACC,MAAM,IAAI,EAAE;IAC7DC,OAAO,CAACC,GAAG,CAACL,YAAY,GAAC,YAAY,CAAC;IACtCjB,SAAS,CAACiB,YAAY,CAAC;EAC3B,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIpB,OAAA;IAAO0B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1B3B,OAAA;MAAA2B,QAAA,EACK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACf,GAAG,CAACgB,QAAQ,iBAChB5B,OAAA;QAAA2B,QAAA,EACK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACf,GAAG,CAACiB,QAAQ,IAAI;UACpB;UACA,MAAMC,SAAS,GAAI,SAAQF,QAAQ,GAAG,CAAC,GAAGC,QAAQ,GAAG,CAAE,EAAuC;UAC9F,MAAME,YAAY,GAAG7B,aAAa,CAAC8B,OAAO,CAACF,SAAS,CAAC;UAErD,oBACI9B,OAAA;YAAA2B,QAAA,eACI3B,OAAA;cACI0B,SAAS,EAAC,cAAc;cACxBO,GAAG,EAAEC,EAAE,IAAI5B,UAAU,CAACC,OAAO,CAAC4B,IAAI,CAACD,EAAG,CAAE;cACxCE,OAAO,EAAElB,WAAY;cACrB,eAAaa,YAAa;cAC1BM,QAAQ,EAAEjC,SAAU;cAAAuB,QAAA,EAEnBI;YAAY;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC,GATJZ,QAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUb,CAAC;QAEb,CAAC;MAAC,GAnBGb,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAACpC,EAAA,CA/CIJ,YAAiC;AAAAyC,EAAA,GAAjCzC,YAAiC;AAiDvC,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}