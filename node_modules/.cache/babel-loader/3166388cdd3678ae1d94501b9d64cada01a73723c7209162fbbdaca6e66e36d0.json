{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/GenderQuestions/src/Components/SelectGenderButton/SGButton.tsx\",\n  _s = $RefreshSig$();\nimport 'src/Components/SelectGenderButton/SGButton.scss';\nimport { useEffect, useCallback, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomButton = ({\n  characterItem,\n  clickData,\n  showPopup\n}) => {\n  _s();\n  const buttonRefs = useRef([]);\n  useEffect(() => {\n    buttonRefs.current.forEach(button => {\n      if (button) {\n        const textLength = button.innerText.length;\n        let fontSize = 20;\n        if (textLength > 4) {\n          fontSize = 16;\n        }\n        if (textLength > 8) {\n          fontSize = 16;\n        }\n        if (textLength > 10) {\n          fontSize = 10;\n        }\n        button.setAttribute('style', `font-Size: ${fontSize}px !important;`);\n      }\n    });\n  }, [characterItem]);\n  const handleClick = useCallback(event => {\n    const selectGender = event.currentTarget.dataset.select || '';\n    console.log(selectGender + 'がクリックされました');\n    clickData(selectGender);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"selectTable\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [0, 1].map(rowIndex => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [0, 1].map((colIndex, index) => {\n          // インデックスに対応する selectキーを動的に作成\n          const selectKeyIndex = rowIndex + colIndex * 2 + 1;\n          const selectKey = `select${selectKeyIndex}`;\n          const selectButton = characterItem.selects[selectKey];\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"customButton\",\n              onClick: handleClick,\n              \"data-select\": selectButton,\n              disabled: showPopup,\n              ref: el => buttonRefs.current[rowIndex * 2 + colIndex] = el,\n              children: selectButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomButton, \"lUlyMY3+mYj85cBkYX96ldys0mw=\");\n_c = CustomButton;\nexport default CustomButton;\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["useEffect","useCallback","useRef","jsxDEV","_jsxDEV","CustomButton","characterItem","clickData","showPopup","_s","buttonRefs","current","forEach","button","textLength","innerText","length","fontSize","setAttribute","handleClick","event","selectGender","currentTarget","dataset","select","console","log","className","children","map","rowIndex","colIndex","index","selectKeyIndex","selectKey","selectButton","selects","onClick","disabled","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/GenderQuestions/src/Components/SelectGenderButton/SGButton.tsx"],"sourcesContent":["import 'src/Components/SelectGenderButton/SGButton.scss';\nimport { useEffect, useCallback, useRef, MouseEventHandler } from \"react\";\nimport { ClickData } from 'src/Components/SelectGenderButton/SGInterface';\n\nconst CustomButton: React.FC<ClickData> = ({ characterItem, clickData, showPopup }) => {\n    const buttonRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n    useEffect(() => {\n        buttonRefs.current.forEach(button => {\n            if (button) {\n                const textLength = button.innerText.length;\n                let fontSize = 20;\n\n                if (textLength > 4) {\n                    fontSize = 16;\n                }\n                if (textLength > 8) {\n                    fontSize = 16;\n                }\n                if (textLength > 10) {\n                    fontSize = 10;\n                }\n\n                button.setAttribute('style', `font-Size: ${fontSize}px !important;`);\n            }\n        });\n    }, [characterItem]);\n    \n    const handleClick: MouseEventHandler<HTMLButtonElement>  = useCallback ((event) => {\n        const selectGender = event.currentTarget.dataset.select || '';\n        console.log(selectGender+'がクリックされました');\n        clickData(selectGender);\n    },[]);\n    \n    return (\n        <table className='selectTable'>\n            <tbody>\n                {[0, 1].map(rowIndex => (\n                    <tr key={rowIndex}>\n                        {[0, 1].map((colIndex, index) => {\n                            // インデックスに対応する selectキーを動的に作成\n                            const selectKeyIndex = rowIndex + colIndex * 2 +1;\n                            const selectKey = `select${selectKeyIndex}` as keyof typeof characterItem.selects;\n                            const selectButton = characterItem.selects[selectKey];\n\n                            return (\n                                <td key={colIndex}>\n                                    <button\n                                        className='customButton'\n                                        onClick={handleClick}\n                                        data-select={selectButton}\n                                        disabled={showPopup}\n                                        ref={(el) => buttonRefs.current[rowIndex * 2 + colIndex] = el}\n                                    >\n                                        {selectButton}\n                                    </button>\n                                </td>\n                            );\n                        })}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default CustomButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}