{"ast":null,"code":"var _jsxFileName = \"/Users/itouhiroki/Desktop/GenderQuestions/src/Components/System/Popup/PopupText.tsx\";\nimport 'Components/System/system.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupText = ({\n  isCorrect,\n  explanation,\n  className\n}) => {\n  const iconClass = isCorrect ? 'oxIcon correct' : 'oxIcon inCorrect';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popupContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: iconClass,\n      children: isCorrect ? 'O' : 'X'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popupText\",\n      children: isCorrect ? '正解！' : '残念！'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"explantionText\",\n      children: explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = PopupText;\nexport default PopupText;\nvar _c;\n$RefreshReg$(_c, \"PopupText\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","PopupText","isCorrect","explanation","className","iconClass","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/GenderQuestions/src/Components/System/Popup/PopupText.tsx"],"sourcesContent":["import 'Components/System/system.scss';\nimport { PopupTextProps } from 'Components/System/Popup/popupInterface';\n\nconst PopupText: React.FC<PopupTextProps> = ({ isCorrect, explanation, className}) => {\n    const iconClass = isCorrect ? 'oxIcon correct' : 'oxIcon inCorrect';\n\n    return (\n        <div className='popupContent'>\n            <p className={ iconClass }>{ isCorrect ? 'O' : 'X' }</p>\n            <p className='popupText'>{ isCorrect ? '正解！' : '残念！' }</p>\n            <p className='explantionText'>{explanation}</p>\n        </div>\n    );\n};\n\nexport default PopupText;"],"mappings":";AAAA,OAAO,+BAA+B;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAGvC,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAClF,MAAMC,SAAS,GAAGH,SAAS,GAAG,gBAAgB,GAAG,kBAAkB;EAEnE,oBACIF,OAAA;IAAKI,SAAS,EAAC,cAAc;IAAAE,QAAA,gBACzBN,OAAA;MAAGI,SAAS,EAAGC,SAAW;MAAAC,QAAA,EAAGJ,SAAS,GAAG,GAAG,GAAG;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDV,OAAA;MAAGI,SAAS,EAAC,WAAW;MAAAE,QAAA,EAAGJ,SAAS,GAAG,KAAK,GAAG;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DV,OAAA;MAAGI,SAAS,EAAC,gBAAgB;MAAAE,QAAA,EAAEH;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd,CAAC;AAACC,EAAA,GAVIV,SAAmC;AAYzC,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}