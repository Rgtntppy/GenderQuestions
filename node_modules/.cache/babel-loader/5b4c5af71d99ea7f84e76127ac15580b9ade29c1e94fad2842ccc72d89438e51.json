{"ast":null,"code":"import React,{useState,useEffect}from'react';import{CharacterDataList}from'src/Component/CharacterData/CharacterData';import SGButton from'src/Component/SelectGenderButton/SGButton';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const GameComponent=()=>{const[ClickData,setClickData]=useState('');const[isFirstRender,setIsFirstRender]=useState(true);const[characterItem,setCharacterItem]=useState(null);const pushButtonData=data=>{setClickData(data);};useEffect(()=>{if(CharacterDataList.length>0){setCharacterItem(CharacterDataList[0]);}},[]);useEffect(()=>{// 初回レンダリング時は処理をスキップする\nif(isFirstRender){setIsFirstRender(false);return;}if(characterItem&&ClickData===characterItem.gender){console.log('正解！');}else{console.log('残念！');};},[ClickData,isFirstRender,characterItem]);if(!characterItem){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// データがまだ読み込まれていない場合のローディング表示\n}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:characterItem.name}),/*#__PURE__*/_jsx(SGButton,{ClickData:pushButtonData})]});};export default GameComponent;","map":{"version":3,"names":["React","useState","useEffect","CharacterDataList","SGButton","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","GameComponent","ClickData","setClickData","isFirstRender","setIsFirstRender","characterItem","setCharacterItem","pushButtonData","data","length","gender","console","log","children","name"],"sources":["/Users/itouhiroki/Desktop/ox_game/frontend/src/Component/GameComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CharacterDataList } from 'src/Component/CharacterData/CharacterData';\nimport SGButton from 'src/Component/SelectGenderButton/SGButton';\n\ninterface CharacterData {\n    name: string;\n    gender: string;\n}\n\nconst GameComponent: React.FC = () => {\n    const [ ClickData, setClickData ] = useState<string>('');\n    const [ isFirstRender, setIsFirstRender ] = useState(true);\n    const [ characterItem, setCharacterItem ] = useState<CharacterData | null>(null);\n    \n    const pushButtonData = (data: string) => {\n        setClickData(data)\n    };\n\n    useEffect(() => {\n        if (CharacterDataList.length > 0) {\n            setCharacterItem(CharacterDataList[0]);\n        }\n    }, []);\n    \n    useEffect(() => {\n        // 初回レンダリング時は処理をスキップする\n        if (isFirstRender) {\n            setIsFirstRender(false);\n            return;\n        }\n\n        if (characterItem && ClickData === characterItem.gender) {\n            console.log('正解！')\n        }else {\n            console.log('残念！')\n        };\n    },[ClickData, isFirstRender, characterItem]);\n\n    if (!characterItem) {\n        return <p>Loading...</p>; // データがまだ読み込まれていない場合のローディング表示\n    }\n\n    return (\n        <>\n        <p>{characterItem.name}</p>\n        <SGButton ClickData={ pushButtonData }/>\n        </>\n    );\n};\n\nexport default GameComponent;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,iBAAiB,KAAQ,2CAA2C,CAC7E,MAAO,CAAAC,QAAQ,KAAM,2CAA2C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOjE,KAAM,CAAAC,aAAuB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAEC,SAAS,CAAEC,YAAY,CAAE,CAAGZ,QAAQ,CAAS,EAAE,CAAC,CACxD,KAAM,CAAEa,aAAa,CAAEC,gBAAgB,CAAE,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAAEe,aAAa,CAAEC,gBAAgB,CAAE,CAAGhB,QAAQ,CAAuB,IAAI,CAAC,CAEhF,KAAM,CAAAiB,cAAc,CAAIC,IAAY,EAAK,CACrCN,YAAY,CAACM,IAAI,CAAC,CACtB,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACZ,GAAIC,iBAAiB,CAACiB,MAAM,CAAG,CAAC,CAAE,CAC9BH,gBAAgB,CAACd,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAC1C,CACJ,CAAC,CAAE,EAAE,CAAC,CAEND,SAAS,CAAC,IAAM,CACZ;AACA,GAAIY,aAAa,CAAE,CACfC,gBAAgB,CAAC,KAAK,CAAC,CACvB,OACJ,CAEA,GAAIC,aAAa,EAAIJ,SAAS,GAAKI,aAAa,CAACK,MAAM,CAAE,CACrDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CACtB,CAAC,IAAK,CACFD,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CACtB,CAAC,CACL,CAAC,CAAC,CAACX,SAAS,CAAEE,aAAa,CAAEE,aAAa,CAAC,CAAC,CAE5C,GAAI,CAACA,aAAa,CAAE,CAChB,mBAAOV,IAAA,MAAAkB,QAAA,CAAG,YAAU,CAAG,CAAC,CAAE;AAC9B,CAEA,mBACId,KAAA,CAAAF,SAAA,EAAAgB,QAAA,eACAlB,IAAA,MAAAkB,QAAA,CAAIR,aAAa,CAACS,IAAI,CAAI,CAAC,cAC3BnB,IAAA,CAACF,QAAQ,EAACQ,SAAS,CAAGM,cAAgB,CAAC,CAAC,EACtC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}