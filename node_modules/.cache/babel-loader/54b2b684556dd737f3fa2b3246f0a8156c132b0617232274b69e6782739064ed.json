{"ast":null,"code":"import { useEffect } from \"react\";\nconst CheckAnswer = useEffect(_c = () => {\n  if (ClickData) {\n    if (characterItem && ClickData === characterItem.gender) {\n      console.log('正解！');\n      setShowPopup(true);\n      setIsCorrect(true);\n    } else {\n      console.log('残念！');\n      setShowPopup(true);\n      setIsCorrect(false);\n    }\n    ;\n  }\n}, [ClickData]);\n_c2 = CheckAnswer;\nexport default CheckAnswer;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckAnswer$useEffect\");\n$RefreshReg$(_c2, \"CheckAnswer\");","map":{"version":3,"names":["useEffect","CheckAnswer","_c","ClickData","characterItem","gender","console","log","setShowPopup","setIsCorrect","_c2","$RefreshReg$"],"sources":["/Users/itouhiroki/Desktop/ox_game/frontend/src/Components/System/CheckAnswer.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\n\ninterface CharacterData {\n    name: string;\n    gender: string;\n}\n\ninterface CheckAnswerProps {\n    clickData: string;\n    characterItem: CharacterData | null;\n    onResult: (isCorrect: boolean) => void;\n    onShowPopup: (show: boolean) => void;\n}\n\nconst CheckAnswer = useEffect(() => {\n    if (ClickData) {\n        if (characterItem && ClickData === characterItem.gender) {\n            console.log('正解！')\n            setShowPopup(true);\n            setIsCorrect(true);\n        }else {\n            console.log('残念！')\n            setShowPopup(true);\n            setIsCorrect(false);\n        };\n    }\n},[ClickData]);\n\nexport default CheckAnswer;"],"mappings":"AAAA,SAAgBA,SAAS,QAAQ,OAAO;AAcxC,MAAMC,WAAW,GAAGD,SAAS,CAAAE,EAAA,GAACA,CAAA,KAAM;EAChC,IAAIC,SAAS,EAAE;IACX,IAAIC,aAAa,IAAID,SAAS,KAAKC,aAAa,CAACC,MAAM,EAAE;MACrDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBC,YAAY,CAAC,IAAI,CAAC;MAClBC,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAK;MACFH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBC,YAAY,CAAC,IAAI,CAAC;MAClBC,YAAY,CAAC,KAAK,CAAC;IACvB;IAAC;EACL;AACJ,CAAC,EAAC,CAACN,SAAS,CAAC,CAAC;AAACO,GAAA,GAZTT,WAAW;AAcjB,eAAeA,WAAW;AAAC,IAAAC,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}